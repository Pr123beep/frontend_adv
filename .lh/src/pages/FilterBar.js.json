{
    "sourceFile": "src/pages/FilterBar.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1742379974630,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1742379974630,
            "name": "Commit-0",
            "content": "import React, { useState } from 'react';\r\nimport { Box, Chip, Button } from '@mui/material';\r\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\r\n\r\n/**\r\n * Sample categories for demonstration.\r\n * You can replace these with your actual categories or dynamic data.\r\n */\r\nconst categories = [\r\n  { label: 'Posts', key: 'posts' },\r\n  { label: 'Jobs', key: 'jobs' },\r\n  { label: 'Courses', key: 'courses' },\r\n  { label: 'People', key: 'people' },\r\n  { label: 'Groups', key: 'groups' },\r\n  { label: 'Companies', key: 'companies' },\r\n  { label: 'Events', key: 'events' },\r\n  { label: 'Products', key: 'products' },\r\n  { label: 'Services', key: 'services' },\r\n  { label: 'Schools', key: 'schools' },\r\n];\r\n\r\nfunction FilterBar({ onFilterChange }) {\r\n  // Single selection: store one category\r\n  const [selectedCategory, setSelectedCategory] = useState(null);\r\n\r\n  // Handler when a chip is clicked\r\n  const handleChipClick = (categoryKey) => {\r\n    if (selectedCategory === categoryKey) {\r\n      // If the user clicks the same category again, deselect it\r\n      setSelectedCategory(null);\r\n      onFilterChange(null);\r\n    } else {\r\n      setSelectedCategory(categoryKey);\r\n      onFilterChange(categoryKey);\r\n    }\r\n  };\r\n\r\n  // Example handler for \"All filters\"\r\n  const handleAllFiltersClick = () => {\r\n    // This could open a modal or side panel with advanced filters\r\n    console.log('All filters clicked!');\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        overflowX: 'auto',\r\n        gap: 1,\r\n        py: 1,\r\n        px: 2,\r\n        backgroundColor: '#fff',\r\n        boxShadow: '0 1px 4px rgba(0,0,0,0.1)',\r\n        borderRadius: 2,\r\n      }}\r\n    >\r\n      {categories.map((cat) => {\r\n        const isSelected = cat.key === selectedCategory;\r\n        return (\r\n          <Chip\r\n            key={cat.key}\r\n            label={cat.label}\r\n            variant={isSelected ? 'filled' : 'outlined'}\r\n            color={isSelected ? 'primary' : 'default'}\r\n            onClick={() => handleChipClick(cat.key)}\r\n            sx={{\r\n              cursor: 'pointer',\r\n              fontWeight: isSelected ? 'bold' : 'normal',\r\n              borderRadius: '9999px', // Pill shape\r\n            }}\r\n          />\r\n        );\r\n      })}\r\n      <Button\r\n        onClick={handleAllFiltersClick}\r\n        variant=\"outlined\"\r\n        endIcon={<ArrowDropDownIcon />}\r\n        sx={{\r\n          textTransform: 'none',\r\n          borderRadius: '9999px',\r\n        }}\r\n      >\r\n        All filters\r\n      </Button>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default FilterBar;\r\n"
        }
    ]
}